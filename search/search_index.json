{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"COMMON/common/","title":"Common","text":"<p>fdvdfv</p>"},{"location":"CRU/cru/","title":"Cru","text":""},{"location":"CRU/cru/#cru","title":"CRU","text":"<ul> <li>Simplified Block Diagram  </li> </ul>"},{"location":"CRU/cru/#clock","title":"Clock","text":""},{"location":"CRU/cru/#pcie-dma","title":"PCIe DMA","text":"<p>\u041e\u0441\u043d\u043e\u0432\u043d\u043e\u0439 \u043f\u043e\u0442\u043e\u043a \u0434\u0430\u043d\u043d\u044b\u0445 \u043f\u0435\u0440\u0435\u0434\u0430\u0451\u0442\u0441\u044f \u0447\u0435\u0440\u0435\u0437 \u0438\u043d\u0442\u0435\u0440\u0444\u0435\u0439\u0441 DMA \u0434\u043b\u044f \u043f\u0435\u0440\u0435\u043c\u0435\u0449\u0435\u043d\u0438\u044f \u0434\u0430\u043d\u043d\u044b\u0445 \u043e\u0442 FEE (Front-End Electronics) \u0432 \u043f\u0430\u043c\u044f\u0442\u044c FLP (First Level Processor).   </p> <p>CRU \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442 PCIe Gen 3 \u00d7 16 \u0438\u043d\u0442\u0435\u0440\u0444\u0435\u0439\u0441 \u0434\u043b\u044f \u0441\u0432\u044f\u0437\u0438 \u0441 FLP.      \u0418\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u044e\u0442\u0441\u044f \u0434\u0432\u0430 BAR \u0438\u043d\u0442\u0435\u0440\u0444\u0435\u0439\u0441\u0430: BAR0 \u0438 BAR2.     BAR0 \u0437\u0430\u043d\u0438\u043c\u0430\u0435\u0442\u0441\u044f DMA-\u043e\u043f\u0435\u0440\u0430\u0446\u0438\u044f\u043c\u0438, \u043f\u0435\u0440\u0435\u0434\u0430\u0451\u0442 \u0434\u0435\u0441\u043a\u0440\u0438\u043f\u0442\u043e\u0440\u044b \u0441\u0442\u0440\u0430\u043d\u0438\u0446 \u0438 \u0441\u043b\u0435\u0434\u0438\u0442 \u0437\u0430 \u0441\u0442\u0430\u0442\u0443\u0441\u043e\u043c \u0441\u0431\u043e\u0440\u0430 \u0434\u0430\u043d\u043d\u044b\u0445.     BAR2 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442\u0441\u044f \u0434\u043b\u044f \u043d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0438 \u043a\u043e\u043d\u0444\u0438\u0433\u0443\u0440\u0430\u0446\u0438\u0438 \u0438 \u043c\u043e\u043d\u0438\u0442\u043e\u0440\u0438\u043d\u0433\u0430 \u0434\u0440\u0443\u0433\u0438\u0445 \u043a\u043e\u043c\u043f\u043e\u043d\u0435\u043d\u0442\u043e\u0432 \u043f\u0440\u043e\u0448\u0438\u0432\u043a\u0438.</p>"},{"location":"CRU/cru/#05-ltu-cru","title":"\ud83d\udfe2 05 - LTU - CRU","text":"<p>alt text text</p> <p></p>"},{"location":"CRU/cru/#02-gbt","title":"\ud83d\udfe2 02 - GBT","text":"<p>\u0423 \u043d\u0430\u0441 \u0435\u0441\u0442\u044c \u0434\u0432\u0430 \u0442\u0438\u043f\u0430 \u0440\u0430\u043c\u0435\u043a   </p> <p> </p> <p>\u041a\u0430\u043a \u044d\u0442\u043e \u0440\u0430\u0431\u043e\u0442\u0430\u0435\u0442? \u0414\u0435\u0442\u0435\u043a\u0442\u043e\u0440\u044b \u043f\u0435\u0440\u0435\u0434\u0430\u044e\u0442 \u0434\u0430\u043d\u043d\u044b\u0435 \u043a CRU (Central Readout Unit). \u0415\u0441\u043b\u0438 isdatasel = 1, \u043f\u0435\u0440\u0435\u0434\u0430\u044e\u0442\u0441\u044f \u0444\u0438\u0437\u0438\u0447\u0435\u0441\u043a\u0438\u0435 \u0441\u043e\u0431\u044b\u0442\u0438\u044f. \u0415\u0441\u043b\u0438 isdatasel = 0, CRU \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u044f\u0435\u0442 \u0443\u043f\u0440\u0430\u0432\u043b\u044f\u044e\u0449\u0438\u0435 \u043a\u043e\u043c\u0430\u043d\u0434\u044b \u043f\u043e \u0441\u0442\u0430\u0440\u0448\u0438\u043c \u0431\u0438\u0442\u0430\u043c \u0434\u0430\u043d\u043d\u044b\u0445. CRU \u0438\u0437\u0432\u043b\u0435\u043a\u0430\u0435\u0442 SWT \u0438 \u043e\u0442\u043f\u0440\u0430\u0432\u043b\u044f\u0435\u0442 \u0435\u0433\u043e \u0432 FIFO, \u0434\u043e\u0441\u0442\u0443\u043f\u043d\u044b\u0439 \u0434\u043b\u044f \u0441\u0438\u0441\u0442\u0435\u043c\u044b \u0443\u043f\u0440\u0430\u0432\u043b\u0435\u043d\u0438\u044f DCS.</p> <p>  \u0424\u0438\u0437\u0438\u0447\u0435\u0441\u043a\u0438\u0435 \u0434\u0430\u043d\u043d\u044b\u0435 \u043e\u0431\u043e\u0437\u043d\u0430\u0447\u0435\u043d\u044b \u0444\u043b\u0430\u0433\u043e\u043c isdatasel = 1, \u0430 \u0443\u043f\u0440\u0430\u0432\u043b\u044f\u044e\u0449\u0438\u0435 \u043a\u043e\u043c\u0430\u043d\u0434\u044b (IDLE, SOP, EOP, SWT) \u0438\u043c\u0435\u044e\u0442 \u0444\u043b\u0430\u0433 isdatasel = 0 \u0438 \u0441\u043e\u0434\u0435\u0440\u0436\u0430\u0442 \u0434\u0440\u0443\u0433\u043e\u0439 \u0437\u0430\u0433\u043e\u043b\u043e\u0432\u043e\u043a, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u0445\u0440\u0430\u043d\u0438\u0442\u0441\u044f \u0432 \u043f\u043e\u043b\u0435 \u0434\u0430\u043d\u043d\u044b\u0445 GBT. The CRU extracts the SWT information from the data stream before it reaches the DMA engine and stores it in a dedicated FIFO which is accessed by DCS.</p> Header <p> </p> Frame <p></p> Is <p></p>"},{"location":"CRU/cru/#021-data-frame-encodings","title":"\ud83d\udfe2 02.1 Data Frame &amp; Encodings","text":"Success"},{"location":"CRU/cru/#022-usual-latency","title":"\ud83d\udfe2 02.2 Usual Latency","text":"Success"},{"location":"CRU/cru/#023-gbt-tx-gbt-rx","title":"\ud83d\udfe2 02.3 GBT Tx GBT Rx","text":"Success"},{"location":"CRU/cru/#024-single-link-example-design","title":"\ud83d\udfe2 02.4 Single-Link Example Design","text":"Success <p>  Tx (\u043f\u0435\u0440\u0435\u0434\u0430\u0442\u0447\u0438\u043a) \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0430\u0435\u0442\u0441\u044f \u043a Pattern Generator, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u0441\u043e\u0437\u0434\u0430\u0451\u0442 \u0442\u0435\u0441\u0442\u043e\u0432\u044b\u0439 \u0441\u0438\u0433\u043d\u0430\u043b. Rx (\u043f\u0440\u0438\u0451\u043c\u043d\u0438\u043a) \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0430\u0435\u0442\u0441\u044f \u043a Pattern Checker, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u043f\u0440\u043e\u0432\u0435\u0440\u044f\u0435\u0442 \u043f\u0440\u0430\u0432\u0438\u043b\u044c\u043d\u043e\u0441\u0442\u044c \u043f\u0435\u0440\u0435\u0434\u0430\u0447\u0438.</p>"},{"location":"CRU/cru/#031-gbt-swt-single-word-transfer","title":"\ud83d\udfe2 03.1 - GBT-SWT (Single Word Transfer)","text":"<p>\u041e\u0441\u043d\u043e\u0432\u0430:</p> <ul> <li>\u0418\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442\u0441\u044f \u0442\u043e\u043b\u044c\u043a\u043e \u0432 ALICE \u0434\u043b\u044f \u043f\u0435\u0440\u0435\u0434\u0430\u0447\u0438 \u043e\u0434\u0438\u043d\u043e\u0447\u043d\u043e\u0433\u043e \u0441\u043b\u043e\u0432\u0430 \u043a\u043e\u043d\u0444\u0438\u0433\u0443\u0440\u0430\u0446\u0438\u0438. </li> <li>\u041f\u043e\u0437\u0432\u043e\u043b\u044f\u0435\u0442 \u043f\u0435\u0440\u0435\u0434\u0430\u0432\u0430\u0442\u044c \u043a\u043e\u043d\u0444\u0438\u0433\u0443\u0440\u0430\u0446\u0438\u043e\u043d\u043d\u044b\u0435 \u043a\u043e\u043c\u0430\u043d\u0434\u044b \u043d\u0430\u043c\u043d\u043e\u0433\u043e \u0431\u044b\u0441\u0442\u0440\u0435\u0435, \u0447\u0435\u043c GBT-EC.</li> <li>\u0418\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442 \u043a\u0430\u043d\u0430\u043b GBT-DATA, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u043c\u043e\u0436\u0435\u0442 \u043f\u0435\u0440\u0435\u0434\u0430\u0432\u0430\u0442\u044c \u0434\u0430\u043d\u043d\u044b\u0435 \u0441\u043e \u0441\u043a\u043e\u0440\u043e\u0441\u0442\u044c\u044e 3200 \u041c\u0431\u0438\u0442/\u0441 (80*40Mhz) (\u0432 40 \u0440\u0430\u0437 \u0431\u044b\u0441\u0442\u0440\u0435\u0435, \u0447\u0435\u043c GBT-EC).</li> </ul> <p>\u041a\u0430\u043a \u0440\u0430\u0431\u043e\u0442\u0430\u0435\u0442:</p> <ul> <li>FPGA \u043d\u0430 \u0434\u0435\u0442\u0435\u043a\u0442\u043e\u0440\u0435 \u0444\u043e\u0440\u043c\u0438\u0440\u0443\u0435\u0442 \u043a\u043e\u043c\u0430\u043d\u0434\u0443 SWT (0x3).</li> <li>CRU \u043f\u043e\u043b\u0443\u0447\u0430\u0435\u0442 \u043f\u043e\u0442\u043e\u043a \u0434\u0430\u043d\u043d\u044b\u0445 \u0438 \u0432\u044b\u0434\u0435\u043b\u044f\u0435\u0442 \u0438\u0437 \u043d\u0435\u0433\u043e \u043a\u043e\u043c\u0430\u043d\u0434\u044b \u0443\u043f\u0440\u0430\u0432\u043b\u0435\u043d\u0438\u044f.</li> <li>CRU \u0441\u043e\u0445\u0440\u0430\u043d\u044f\u0435\u0442 \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u043d\u044b\u0435 \u043a\u043e\u043c\u0430\u043d\u0434\u044b \u0432 FIFO, \u0433\u0434\u0435 \u043e\u043d\u0438 \u0441\u0442\u0430\u043d\u043e\u0432\u044f\u0442\u0441\u044f \u0434\u043e\u0441\u0442\u0443\u043f\u043d\u044b\u043c\u0438 \u0434\u043b\u044f DCS (\u0434\u0435\u0442\u0435\u043a\u0442\u043e\u0440\u043d\u043e\u0439 \u0441\u0438\u0441\u0442\u0435\u043c\u044b \u0443\u043f\u0440\u0430\u0432\u043b\u0435\u043d\u0438\u044f).</li> </ul> <p>\u041a\u0430\u043a \u0432\u044b\u0433\u043b\u044f\u0434\u0438\u0442 \u043f\u0430\u043a\u0430\u0435\u0442:</p> <p></p>"},{"location":"CRU/cru/#032-flp-fe","title":"\ud83d\udfe2 03.2 - FLP - FE","text":"<p>text  SOP (Start of Packet)</p> Xxxx <p></p>"},{"location":"CRU/cru/#05-ltu-ctp","title":"\ud83d\udfe2 05 - LTU - CTP","text":"<p> text</p>"},{"location":"CRU/cru/#bysy","title":"BYSY","text":"<p>CRU \u0413\u043e\u0432\u043e\u0440\u0438\u0442\u044c \u0447\u0442\u043e \u043c\u044b \u043f\u0445\u0430\u0435\u043c \u0443\u0436\u0435 \u043c\u043d\u043e\u0433\u043e \u0434\u0430\u043d\u043d\u044b\u0445 </p>"},{"location":"CRU/cru/#heart-beat-frames-inside-fpl-cru","title":"\ud83d\udfe2 Heart Beat Frames (inside fpl - cru)","text":""},{"location":"CRU/cru/#999-todo","title":"\ud83d\udfe2 999 - ToDo","text":"<ul> <li>\u0412 \u043a\u043e\u043d\u0443\u0435 \u043e\u0437\u043d\u0430\u043a\u043e\u043c\u0438\u0442\u044c\u0441\u044f \u0441 \u0435\u0442\u0438\u043c \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u043e\u043c: https://physics.bu.edu/~hazen/GLIB/gbt_fpga/tags/gbt_fpga_3_0_0/doc/GBT_FPGA%20_User_Guide_v1_0.pdf</li> </ul>"},{"location":"CRU/cru/#00-links","title":"\ud83d\udfe2 00 - links","text":"<ul> <li>\ud83d\udcc4Implementing CERN GBT and lpGBTlink arrays in Intel Arria 10 FPGA</li> <li>\ud83d\udcc4CRU</li> <li>\ud83d\udcc4Sebastian indico (SWT)</li> <li>\ud83d\udcc4GBT FPGA User Guide v1_0</li> <li>\ud83d\udcc4GBTx</li> <li> <p>\ud83d\udcc4GBT-SCA</p> </li> <li> <p>\ud83d\udd17gitlab-alice-cru</p> </li> <li>\ud83d\udd17GitHub VictorPierozak - IPbus </li> <li>\ud83d\udd17GitHub VictorPierozak - IpbusSWT </li> <li>\ud83d\udd17GitHub VictorPierozak - ALFIPbu</li> <li>\ud83d\udd17gbtproject</li> </ul>"},{"location":"FPGA_PROJECTS/fpga_projects/","title":"Fpga projects","text":""},{"location":"FPGA_PROJECTS/fpga_projects/#gbt","title":"GBT","text":"<p>C:\\Users\\OSavchenko\\Desktop\\g - c\u0430\u043c gbt \u0431\u0435\u0437 \u0438\u0437\u043c\u0435\u043d\u0435\u043d\u0438\u0439 - \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e \u0442\u0443\u0442 \u0434\u0435\u043b\u0430\u043b \u0438\u0437\u0438\u0442\u043d\u0435\u043d\u0438\u044f \u0441 \u0441lock \u0438 \u0434\u043e\u0431\u0430\u0432\u043b\u044f\u043b \u0434\u043e\u043f\u043e\u043b\u043d\u0438\u0442\u0435\u043b\u044c\u043d\u044b\u0439 VIO - \u0435\u0442\u043e \u043c\u043e\u0436\u043d\u043e \u043b\u0435\u0433\u043a\u043e \u043f\u0440\u043e\u0432\u0435\u0440\u0438\u0442\u044c</p>"},{"location":"FPGA_PROJECTS/fpga_projects/#gbt-ipbus","title":"GBT - IPBUS","text":"<p>C:\\Users\\OSavchenko\\Desktop\\3 - \u0441\u043e\u0432\u043c\u0435\u0449\u0435\u043d\u0438 \u0434\u0432\u0430 \u0431\u043b\u043e\u043a\u0430 \u0432\u043c\u0435\u0441\u0442\u0435</p>"},{"location":"FPGA_PROJECTS/fpga_projects/#pm-","title":"PM - \u0434\u043b\u044f \u0438\u0441\u043b\u0435\u0434\u043e\u0432\u0430\u043d\u0438\u044f","text":"<p>C:\\Users\\OSavchenko\\Desktop\\Vivado\\06_PM</p>"},{"location":"GBT/gbt/","title":"Gbt","text":""},{"location":"GBT/gbt/#gbt-frame","title":"GBT FRame","text":"GBT FRAME GBT Header <ul> <li>gbt_bank_package.vhd<ul> <li></li> </ul> </li> </ul> Rx <ul> <li>gbt_rx_decoder.vhd<ul> <li></li> </ul> </li> </ul> Tx <ul> <li></li> <li>gbt_tx_scrambler.vhd<ul> <li></li> <li>VIO(txIsDataSel_from_user) --- &gt; TX_ISDATA_SEL_I : in  std_logic;</li> </ul> </li> </ul> SC - {IC EC or SWT} <ul> <li>dfv</li> <li>\u0415\u0441\u0442\u044c 3 \u043f\u0440\u043e\u0442\u043e\u043a\u043e\u043b\u0430 \u043a\u043e\u043d\u0444\u0438\u0433\u0443\u0440\u0430\u0443\u0438\u0438</li> <li>GBT-EC (External Control) \u2013 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442\u0441\u044f \u0434\u043b\u044f \u043e\u0442\u043f\u0440\u0430\u0432\u043a\u0438 \u043a\u043e\u043d\u0444\u0438\u0433\u0443\u0440\u0430\u0446\u0438\u043e\u043d\u043d\u044b\u0445 \u0434\u0430\u043d\u043d\u044b\u0445 \u0432 ASIC (\u0438\u043d\u0442\u0435\u0433\u0440\u0430\u043b\u044c\u043d\u044b\u0435 \u0441\u0445\u0435\u043c\u044b) \u043d\u0430 \u043f\u0435\u0440\u0435\u0434\u0430\u044e\u0449\u0435\u0439 \u044d\u043b\u0435\u043a\u0442\u0440\u043e\u043d\u0438\u043a(FEE). - \u043c\u0435\u0434\u043b\u0435\u043d\u043d\u044b\u0439 (80 \u041c\u0431\u0438\u0442/\u0441).</li> <li>GBT-IC (Internal Control) \u2013 \u043f\u0440\u0438\u043c\u0435\u043d\u044f\u0435\u0442\u0441\u044f \u0434\u043b\u044f \u043a\u043e\u043d\u0444\u0438\u0433\u0443\u0440\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f \u043c\u0438\u043a\u0440\u043e\u0441\u0445\u0435\u043c GBTx. - \u043c\u0435\u0434\u043b\u0435\u043d\u043d\u044b\u0439 (80 \u041c\u0431\u0438\u0442/\u0441).</li> <li>GBT-SWT (Single Word Transfer) \u2013 \u043e\u0442\u0434\u0435\u043b\u044c\u043d\u044b\u0439 \u043f\u0440\u043e\u0442\u043e\u043a\u043e\u043b, \u043d\u0435 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u044e\u0449\u0438\u0439 \u0441\u0442\u0430\u043d\u0434\u0430\u0440\u0442\u043d\u044b\u0439 GBT.</li> </ul> Icec <p>\u0417\u0430\u0447\u043c \u043d\u0443\u0436\u043d\u044b - \u041f\u0440\u043e\u0442\u043e\u043a\u043e\u043b\u044b \u043a\u043e\u043d\u0444\u0438\u0433\u0443\u0440\u0430\u0446\u0438\u0438 \u043d\u0443\u0436\u043d\u044b \u0434\u043b\u044f \u0443\u043f\u0440\u0430\u0432\u043b\u0435\u043d\u0438\u044f, \u043d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0438 \u0438 \u043c\u043e\u043d\u0438\u0442\u043e\u0440\u0438\u043d\u0433\u0430 \u0434\u0435\u0442\u0435\u043a\u0442\u043e\u0440\u043e\u0432 \u0432 \u044d\u043a\u0441\u043f\u0435\u0440\u0438\u043c\u0435\u043d\u0442\u0435 ALICE. \u041e\u043d\u0438 \u043f\u043e\u0437\u0432\u043e\u043b\u044f\u044e\u0442 \u043f\u0435\u0440\u0435\u0434\u0430\u0432\u0430\u0442\u044c \u043a\u043e\u043c\u0430\u043d\u0434\u044b \u0438 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u044b \u0432 \u044d\u043b\u0435\u043a\u0442\u0440\u043e\u043d\u0438\u043a\u0443 \u043f\u0435\u0440\u0435\u0434\u043d\u0435\u0433\u043e \u043a\u0440\u0430\u044f (FEE \u2014 Front-End Electronics), \u0447\u0442\u043e\u0431\u044b \u043a\u043e\u0440\u0440\u0435\u043a\u0442\u043d\u043e \u0440\u0430\u0431\u043e\u0442\u0430\u0442\u044c \u0441 \u0434\u0430\u043d\u043d\u044b\u043c\u0438, \u043f\u043e\u043b\u0443\u0447\u0430\u0435\u043c\u044b\u043c\u0438 \u043e\u0442 \u0434\u0435\u0442\u0435\u043a\u0442\u043e\u0440\u043e\u0432. \u0420\u0430\u0437\u0431\u0435\u0440\u0451\u043c \u043a\u0430\u0436\u0434\u044b\u0439 \u0438\u0437 \u043d\u0438\u0445 \u043f\u043e\u0434\u0440\u043e\u0431\u043d\u0435\u0435.</p> DATA + isdatasel <p>  \u0424\u0438\u0437\u0438\u0447\u0435\u0441\u043a\u0438\u0435 \u0434\u0430\u043d\u043d\u044b\u0435 \u043e\u0431\u043e\u0437\u043d\u0430\u0447\u0435\u043d\u044b \u0444\u043b\u0430\u0433\u043e\u043c isdatasel = 1, \u0430 \u0443\u043f\u0440\u0430\u0432\u043b\u044f\u044e\u0449\u0438\u0435 \u043a\u043e\u043c\u0430\u043d\u0434\u044b (IDLE, SOP, EOP, SWT) \u0438\u043c\u0435\u044e\u0442 \u0444\u043b\u0430\u0433 isdatasel = 0 \u0438 \u0441\u043e\u0434\u0435\u0440\u0436\u0430\u0442 \u0434\u0440\u0443\u0433\u043e\u0439 \u0437\u0430\u0433\u043e\u043b\u043e\u0432\u043e\u043a, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u0445\u0440\u0430\u043d\u0438\u0442\u0441\u044f \u0432 \u043f\u043e\u043b\u0435 \u0434\u0430\u043d\u043d\u044b\u0445 GBT. The CRU extracts the SWT information from the data stream before it reaches the DMA engine and stores it in a dedicated FIFO which is accessed by DCS.</p> Rx <ul> <li>gbt_rx_decoder.vhd<ul> <li></li> </ul> </li> </ul> Tx <ul> <li></li> <li>gbt_tx_scrambler.vhd<ul> <li></li> <li>VIO(txIsDataSel_from_user) --- &gt; TX_ISDATA_SEL_I : in  std_logic;</li> </ul> </li> </ul> GBT_FRAME - WIDE BUS <ul> <li>gbt_bank_package.vhd<ul> <li></li> </ul> </li> </ul> LATENCY <ul> <li> <p>gbt_bank_package.vhd</p> <ul> <li></li> </ul> </li> <li> <p>\ud83d\udcc4 FIT_Readout_GBT_Finogeev</p> <ul> <li></li> </ul> </li> </ul> Frame <p></p> GBT - CRU KC-705 -&gt; CRU(ALF) test <p>  - \u0440\u0430\u0437\u043e\u0431\u0440\u0430\u0442\u044c\u0441\u044f \u043f\u043e\u0447\u0435\u043c\u0443 \u043c\u044b \u0432\u0434\u0435\u043c \u043d\u0443\u043b\u0438  - \u043f\u043e\u043f\u0440\u043e\u0431\u044b\u0432\u0430\u0442\u044c \u0432\u044b\u0441\u044b\u0434\u0430\u0442\u044c \u0434\u0430\u043d\u043d\u044b\u0435 \u0441\u0447\u0435\u0442\u0447\u0438\u043a\u043e\u043c \u0438 \u043f\u043e\u0441\u043c\u043e\u0442\u0440\u0435\u0442\u044c \u0432\u0441\u0435 \u043b\u0438 \u0434\u0430\u043d\u043d\u044b\u0435 \u0434\u043e\u0445\u043e\u0434\u044f\u0442</p> CRU(ALF) -&gt; KC-705 test <ul> <li>\u041f\u0440\u043e\u0431\u044b\u0432\u0430\u043b\u0438 \u0432\u044b\u0441\u044b\u043b\u0430\u0442\u044c \u0434\u0430\u043d\u043d\u044b\u0435 \u0441 ALF \u043d\u043e \u043d\u0430 KC-705 \u0431\u044b\u043b\u043e \u043f\u043e\u0443\u0441\u0442\u043e </li> <li>\u041f\u0440\u0438 \u043e\u0431\u043d\u043e\u0432\u043b\u0435\u043d\u0438\u0438 \u0441\u0438\u0441\u0442\u0435\u043c\u044b (\u0424\u0440\u0438\u043d\u0447\u0438\u0448\u0435\u043a \u043b\u0443\u0447\u0448\u0435 \u0437\u043d\u0430\u0435\u0442 \u0447\u0442\u043e \u043e\u043d \u0434\u0435\u043b\u0430\u043b) \u043f\u043e\u044f\u0432\u043b\u044f\u043b\u0438\u0441\u044c \u043a\u0430\u043a\u0438\u0435\u0442\u043e \u0434\u0430\u043d\u043d\u044b\u0435 \u043d\u0430 KC-705\u044a</li> <li>\u041d\u0443\u0436\u043d\u043e \u0441\u0434\u0435\u043b\u0430\u0442\u044c LoopBack \u0447\u0442\u043e \u0431\u044b \u043f\u043e\u043d\u0438\u043c\u0430\u0442\u044c \u0447\u0442\u043e \u043f\u0440\u0430\u0432\u0438\u043b\u044c\u043d\u043e \u0432\u044b\u0441\u044b\u043b\u0430\u0435\u043c \u0434\u0430\u043d\u043d\u044b\u0435 - (\u043f\u0440\u0438\u0435\u043c\u043d\u0438\u043a \u0440\u0430\u0431\u043e\u0442\u0430\u0435\u0442)</li> <li>\u0412 \u043f\u043e\u043d\u0435\u0434\u0435\u043b\u044c\u043d\u0438\u0435 \u043f\u043e\u0439\u0434\u0435\u0442 \u043b\u0438\u0441\u0442\u0430 \u0437\u0430\u043a\u0443\u043f\u043e\u0432 </li> </ul> \u041f\u0440\u043e\u0432\u0435\u0440\u043a\u0430_\u0438\u0437\u043c\u0438\u043d\u0435\u0438\u043d\u044f_\u0431\u0438\u0442\u043e\u0432 <p> </p> Fdvfd <ul> <li>\u041a\u0430\u043a \u044d\u0442\u043e \u0440\u0430\u0431\u043e\u0442\u0430\u0435\u0442?</li> <li>\u0414\u0435\u0442\u0435\u043a\u0442\u043e\u0440\u044b \u043f\u0435\u0440\u0435\u0434\u0430\u044e\u0442 \u0434\u0430\u043d\u043d\u044b\u0435 \u043a CRU (Central Readout Unit).</li> <li>\u0415\u0441\u043b\u0438 isdatasel = 1, \u043f\u0435\u0440\u0435\u0434\u0430\u044e\u0442\u0441\u044f \u0444\u0438\u0437\u0438\u0447\u0435\u0441\u043a\u0438\u0435 \u0441\u043e\u0431\u044b\u0442\u0438\u044f.</li> <li>\u0415\u0441\u043b\u0438 isdatasel = 0, CRU \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u044f\u0435\u0442 \u0443\u043f\u0440\u0430\u0432\u043b\u044f\u044e\u0449\u0438\u0435 \u043a\u043e\u043c\u0430\u043d\u0434\u044b \u043f\u043e \u0441\u0442\u0430\u0440\u0448\u0438\u043c \u0431\u0438\u0442\u0430\u043c \u0434\u0430\u043d\u043d\u044b\u0445.</li> <li>CRU \u0438\u0437\u0432\u043b\u0435\u043a\u0430\u0435\u0442 SWT \u0438 \u043e\u0442\u043f\u0440\u0430\u0432\u043b\u044f\u0435\u0442 \u0435\u0433\u043e \u0432 FIFO, \u0434\u043e\u0441\u0442\u0443\u043f\u043d\u044b\u0439 \u0434\u043b\u044f \u0441\u0438\u0441\u0442\u0435\u043c\u044b \u0443\u043f\u0440\u0430\u0432\u043b\u0435\u043d\u0438\u044f DCS.</li> </ul>"},{"location":"IPBUS/ipbus/","title":"Ipbus","text":""},{"location":"IPBUS/ipbus/#ping-test","title":"ping test","text":""},{"location":"IPBUS/ipbus/#arp-test","title":"arp test","text":""},{"location":"IPBUS/ipbus/#ipbus","title":"IPBUS","text":"\u0420\u0430\u043c\u043a\u0438 <pre><code>    200002f0 2000011f 00000030 00001234\n</code></pre> <p>Req Data: f0020020 1f010020 30000000 34120000 (write - Adress 30 - data 1234) Res Data: f0020020 10010020</p> <pre><code>    200003f0 2000010f 00000030\n</code></pre> <p>Req Data: f0030020 0f010020 30000000   (read - Adress 30) Res Data: f0030020 00010020 34120000           20000100 00001234</p> <p>Data:     f0040020 00010020 34120000</p>"},{"location":"IPBUS/ipbus/#python-code","title":"Python code","text":"\u041e\u0442\u043f\u0440\u0430\u0432\u043b\u043d\u0435\u0438 <p>\u041e\u0442\u043f\u0430\u0432\u043b\u0435\u043d\u0438\u0435 \u0441\u0442\u0430\u0442\u0443\u0441\u043d\u043e\u0439 \u043f\u0430\u0447\u043a\u0438  \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u0435\u0438 \u0441\u0442\u0430\u0442\u0443\u0441\u043d\u043e\u0433\u043e \u043e\u0442\u0432\u0435\u0442\u0430</p> <pre><code>import socket\n\ndef send_udp_data():\n    # IP \u0438 \u043f\u043e\u0440\u0442 \u043d\u0430\u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f\n    target_ip = \"192.168.1.15\"\n    target_port = 50001  # \u0423\u043a\u0430\u0436\u0438\u0442\u0435 \u043f\u043e\u0440\u0442, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u0432\u0430\u043c \u043d\u0443\u0436\u0435\u043d\n\n    # \u0414\u0430\u043d\u043d\u044b\u0435 \u0434\u043b\u044f \u043e\u0442\u043f\u0440\u0430\u0432\u043a\u0438 (\u0432 \u0444\u043e\u0440\u043c\u0430\u0442\u0435 hex)\n    hex_data = \"200000f1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\"\n\n    # \u041f\u0440\u0435\u043e\u0431\u0440\u0430\u0437\u0443\u0435\u043c hex-\u0441\u0442\u0440\u043e\u043a\u0443 \u0432 \u0431\u0430\u0439\u0442\u044b\n    data = bytes.fromhex(hex_data)\n\n    # \u0421\u043e\u0437\u0434\u0430\u0435\u043c UDP-\u0441\u043e\u043a\u0435\u0442\n    with socket.socket(socket.AF_INET, socket.SOCK_DGRAM) as udp_socket:\n        try:\n            # \u041f\u0440\u0438\u0432\u044f\u0437\u044b\u0432\u0430\u0435\u043c \u0441\u043e\u043a\u0435\u0442 \u043a \u043b\u043e\u043a\u0430\u043b\u044c\u043d\u043e\u043c\u0443 \u0430\u0434\u0440\u0435\u0441\u0443 \u0438 \u043f\u043e\u0440\u0442\u0443 0 (\u043f\u0443\u0441\u0442\u044c \u041e\u0421 \u0432\u044b\u0431\u0435\u0440\u0435\u0442 \u043f\u043e\u0440\u0442 \u0430\u0432\u0442\u043e\u043c\u0430\u0442\u0438\u0447\u0435\u0441\u043a\u0438)\n            udp_socket.bind((\"\", 0))\n            local_port = udp_socket.getsockname()[1]\n            print(f\"\u0421\u043e\u043a\u0435\u0442 \u043f\u0440\u0438\u0432\u044f\u0437\u0430\u043d \u043a \u043f\u043e\u0440\u0442\u0443 {local_port} \u0434\u043b\u044f \u043e\u0442\u043f\u0440\u0430\u0432\u043a\u0438/\u043f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u044f \u0434\u0430\u043d\u043d\u044b\u0445\")\n\n            # \u041e\u0442\u043f\u0440\u0430\u0432\u043b\u044f\u0435\u043c \u0434\u0430\u043d\u043d\u044b\u0435\n            udp_socket.sendto(data, (target_ip, target_port))\n            print(f\"\u0414\u0430\u043d\u043d\u044b\u0435 \u043e\u0442\u043f\u0440\u0430\u0432\u043b\u0435\u043d\u044b \u043d\u0430 {target_ip}:{target_port}\")\n\n            # \u041e\u0436\u0438\u0434\u0430\u0435\u043c \u043e\u0442\u0432\u0435\u0442\n            udp_socket.settimeout(5)  # \u0423\u0441\u0442\u0430\u043d\u0430\u0432\u043b\u0438\u0432\u0430\u0435\u043c \u0442\u0430\u0439\u043c-\u0430\u0443\u0442 \u043d\u0430 \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0434\u0430\u043d\u043d\u044b\u0445\n            try:\n                data, addr = udp_socket.recvfrom(1024)  # \u041f\u043e\u043b\u0443\u0447\u0430\u0435\u043c \u0434\u0430\u043d\u043d\u044b\u0435 (\u043c\u0430\u043a\u0441. 1024 \u0431\u0430\u0439\u0442\u0430)\n                print(f\"\u041f\u043e\u043b\u0443\u0447\u0435\u043d\u044b \u0434\u0430\u043d\u043d\u044b\u0435 \u043e\u0442 {addr}: {data.hex()}\")\n\n                # \u0420\u0430\u0437\u0431\u0438\u0432\u0430\u0435\u043c \u0434\u0430\u043d\u043d\u044b\u0435 \u043d\u0430 \u0431\u043b\u043e\u043a\u0438 \u043f\u043e 8 \u0431\u0438\u0442 \u0438 \u0432\u044b\u0432\u043e\u0434\u0438\u043c \u0438\u0445 \u0432 \u0441\u0442\u043e\u043b\u0431\u0435\u0446\n                print(\"\u0420\u0430\u0437\u0431\u0438\u0432\u043a\u0430 \u0434\u0430\u043d\u043d\u044b\u0445 \u043d\u0430 \u0431\u043b\u043e\u043a\u0438 \u043f\u043e 8 \u0431\u0438\u0442:\")\n                for byte in data:\n                    print(f\"{byte:08X}\")\n            except socket.timeout:\n                print(\"\u041e\u0442\u0432\u0435\u0442 \u043d\u0435 \u0431\u044b\u043b \u043f\u043e\u043b\u0443\u0447\u0435\u043d \u0432 \u0442\u0435\u0447\u0435\u043d\u0438\u0435 \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u043b\u0435\u043d\u043d\u043e\u0433\u043e \u0432\u0440\u0435\u043c\u0435\u043d\u0438\")\n        except Exception as e:\n            print(f\"\u041e\u0448\u0438\u0431\u043a\u0430 \u043f\u0440\u0438 \u043e\u0442\u043f\u0440\u0430\u0432\u043a\u0435/\u043f\u0440\u0438\u0435\u043c\u0435 \u0434\u0430\u043d\u043d\u044b\u0445: {e}\")\n\n\nif __name__ == \"__main__\":\n    send_udp_data()\n</code></pre>"},{"location":"LAB/lab/","title":"Lab C2 413","text":""},{"location":"LAB/lab/#ip-table","title":"IP Table","text":"Network - 192.168.88.xx Secondary Network - 172.20.75.xx FRED - 192.168.88.235 TCM - 172.20.75.180 ALF - 192.168.88.232 ALF IPBUS - 172.20.75.100 WinCC - 192.168.88.233 MOXA - 172.20.75.222 FLP - 192.168.88.236 FIT IPBUS - 172.20.75.200 FIT - 192.168.88.254 LTU - 192.168.88.231 WIENER - 192.168.88.234 LAB_DCS - 192.168.88.228 LAB_FPGA - 192.168.88.226"},{"location":"LAB/lab/#fiber-optic","title":"Fiber optic","text":"Optic fiber connectors <ul> <li>PC (Physical Contact) </li> <li>UPC (Ultra Physical Contact)</li> <li>APC (Angled Physical Contact)</li> </ul> Fiber color code <ul> <li>OM - multimode </li> <li>OS - sigle mode</li> </ul> SFP <ul> <li> How to understand what wavelength the SFP is designed for? </li> <li> SFP in Lab <ul> <li>850 nm, 10G10GBASE-SR, 300m </li> </ul> </li> </ul> PON Theory <ul> <li></li> <li> </li> <li> <p>PON Standards</p> <ul> <li>EPON, GPON, WDMPON</li> </ul> </li> </ul> Attenuator <ul> <li>ToDo</li> </ul> Connector <ul> <li>ToDo</li> </ul> Spliter <ul> <li>ToDo</li> </ul>"},{"location":"LAB/lab/#lemo","title":"Lemo","text":"Useful links <ul> <li>\ud83d\udcc4Unipole Multipole catalog</li> <li> <p>\ud83c\udf10Lemo official website</p> </li> <li> <p>\ud83c\udfac LEMO's B series crimped connector assembly - FGG.0B.304.CYCD42</p> </li> <li>\ud83c\udfac LEMO's B series connector assembly - FGG.1B.306.CLAD</li> </ul> Example for FGG.0B.302.CYCD42 <p></p> <ul> <li>FGG - plug type</li> <li>0B<ul> <li>0 - connector size</li> <li>B Series (indoor, keyed) </li> <li>K Series (outdoor, keyed)</li> <li>T Series (outdoor, keyed)</li> <li>S Series (indoor, stepped insert)</li> <li>E Series (outdoor, stepped insert)  </li> </ul> </li> <li>302 <ul> <li>2 two pin </li> </ul> </li> <li>CLAD - to solder wires</li> <li>CYCD - to clamp wires</li> <li>42   - wire size / outside diameter </li> </ul>"},{"location":"MASTER_THESIS/master_thesis/","title":"Master thesis","text":""},{"location":"MASTER_THESIS/master_thesis/#8b10b-encoding","title":"8b/10b encoding","text":""},{"location":"MASTER_THESIS/master_thesis/#spis-tresci","title":"Spis Tresci","text":"<ul> <li>\u0426\u0435\u043b\u0438 <ul> <li>\u043a\u0430\u043a\u0438\u0435 \u0446\u0435\u043b\u0438 \u0438 \u0437\u0430\u0447\u0435\u043c \u043e\u043d\u043e \u043d\u0430\u043c \u043d\u0430\u0434\u043e</li> <li>\u0427\u0442\u043e \u043f\u043e\u043b\u0443\u0447\u0438\u043b\u043e\u0441\u044c \u0441\u0435\u0434\u043b\u0430\u0442\u044c </li> <li>\u043a\u0430\u043a\u0438\u0435 \u0437\u0430\u0441\u043e\u0431\u044b \u0431\u044b\u043b\u0438 \u0438\u0441\u0430\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u044b </li> </ul> </li> <li> <p>CERN</p> </li> <li> <p>Lab Sustem</p> </li> <li> <p>IPBUS</p> <ul> <li>\u0422\u043e\u0435\u0440\u0438\u044f   <ul> <li>PHY CHIP</li> <li>\u041f\u0440\u043e \u0443\u0440\u043e\u0432\u043d\u0438 OSI ISO</li> <li>\u0420\u0430\u0441\u043a\u0430\u0437\u0430\u0442\u044c \u043f\u0440\u043e \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442 IPBUS \u043a\u0430\u043a\u0438\u0435 \u0440\u0430\u043c\u043a\u0438 \u0438 \u0437\u0430\u0447\u0435\u043c</li> </ul> </li> <li>\u0420\u0430\u0441\u043a\u0430\u0437\u0430\u0442\u044c \u043f\u0440\u043e \u043a\u043e\u0434 \u0438 \u0440\u0438\u0432\u0435\u0440\u0441 \u0438\u043d\u0435\u043d\u0435\u0440\u0438\u043d\u0433</li> <li>\u0422\u0435\u0441\u0442\u044b RARP PING</li> <li>C\u0432\u043e\u0435 \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u0435</li> <li>Wire shark (\u0441\u0432\u0435\u0440\u0438\u0442\u044c \u0440\u0430\u043c\u043a\u0438 \u0441 \u0442\u0435\u043e\u0440\u0438\u0435\u0439)</li> </ul> </li> <li> <p>GBT</p> <ul> <li>\u0422\u043e\u0435\u0440\u0438\u044f<ul> <li>encoding </li> <li>scrambler </li> <li>\u0432\u0441\u0435 \u0447\u0442\u043e \u043d\u0430\u0439\u0434\u0443 \u0432 \u0434\u043e\u043a\u0443\u043c\u043c\u0435\u043d\u0442\u0430\u0446\u0438\u0438 FPGA</li> <li>\u041a\u0430\u043a \u0432\u044b\u0433\u043b\u044f\u0434\u0438\u0442 \u0440\u0430\u043c\u043a\u0430</li> </ul> </li> <li>\u0420\u0430\u0441\u043a\u0430\u0437\u0430\u0442\u044c \u043f\u0440\u043e \u043a\u043e\u0434 \u0438 \u0440\u0438\u0432\u0435\u0440\u0441 \u0438\u043d\u0435\u043d\u0435\u0440\u0438\u043d\u0433</li> <li>\u0422\u0435\u0441\u0442\u044b c\u0430\u043c\u043e\u0433\u043e GPT<ul> <li>\u0427\u0442\u043e \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043b\u043e\u0441\u044c \u0434\u043b\u044f \u0442\u0435\u0441\u0442\u043e\u0432 <ul> <li>\u0442\u0430\u043a\u0430\u044f SFP </li> <li>\u0422\u0430\u043a\u043e\u0435 \u043e\u043f\u0442\u043e\u0432\u043e\u043b\u043e\u043a\u043d\u043e </li> </ul> </li> <li>Testy NEIR and Far end</li> <li>pattern generator - \u043f\u043e\u0441\u0442\u043e\u044f\u043d\u043d\u044b\u0439 \u0438 \u0441\u0447\u0435\u0442\u0447\u0438\u043a </li> <li>\u0414\u043b\u044f \u0442\u0435\u0441\u0442\u043e\u0432 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043b\u043e\u0441\u044c VIO</li> <li>IsDataFlag</li> </ul> </li> <li>\u0422\u0435\u0441\u0442\u044b GBT -ALF - ALF GBT</li> </ul> </li> <li> <p>GBT + IPBUS </p> <ul> <li>\u0422\u0435\u043e\u0440\u0438\u044f <ul> <li>\u041e\u043f\u0438\u0441\u0430\u0442\u044c \u0447\u0442\u043e \u043a\u043e \u043d\u0443\u0436\u043d\u043e \u0431\u044b\u043b\u043e \u0438\u0437\u043c\u0435\u043d\u044f\u0442\u044c \u0442\u0430\u043a \u043a\u0430\u043a \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u044e\u0442\u044c\u0441\u044f \u043e\u0431\u0449\u0438\u0435 \u0440\u0435\u0441\u0443\u0440\u0441\u044b </li> <li>\u041d\u0430\u043f\u0438\u0441\u0430\u0442\u044c \u0442\u0440\u0430\u043d\u0441\u0438\u0432\u0435\u0440 </li> <li>\u041e\u043f\u0438\u0441\u0430\u0442\u044c \u0440\u0430\u043c\u043a\u0443 SWT</li> <li>\u041f\u043e\u043a\u0430\u0437\u0430\u0442\u044c \u043f\u0443\u0442\u044c \u043a\u0430\u043a \u0440\u0430\u043c\u043a\u0430 \u043f\u0440\u043e\u0445\u043e\u0434\u0438\u0442 \u043e\u0442 \u043a\u0443\u043c\u043f\u044e\u0442\u043e\u0440\u0430 \u043a </li> </ul> </li> <li>\u0422\u0435\u0441\u0442\u044b </li> </ul> </li> <li> <p>\u041b\u0438\u0441\u0442\u0430 \u0441\u044b\u043b\u043e\u043a </p> </li> </ul>"},{"location":"MY/altium/","title":"Altium","text":""},{"location":"MY/altium/#reflection","title":"Reflection","text":"When dose we will have one reflection or when dose we have multiply reflection  ? <ul> <li>We will have one reflection if we have missing impedance only from Rx side<ul> <li>one reflectiont</li> </ul> </li> <li>We will have multiply reflection if we have missing impedance from Rx side and Tx sied<ul> <li>multiply reflectiont 1</li> <li>multiply reflectiont 2</li> <li>multiply reflectiont 3</li> </ul> </li> <li>Good calculator online for understanding this</li> </ul> Reflection coefficient formula <ul> <li>alt text</li> </ul>"},{"location":"MY/altium/#other","title":"Other","text":"<ul> <li> \u041d\u0430\u0432\u0438\u0433\u043d\u0430\u0446\u0438\u044f_\u043c\u0435\u0436\u0434\u0443_\u0441\u0445\u0435\u043c\u043e\u0439_\u0438_pcb_____cross_probe <ul> <li></li> <li>Cross probe</li> <li>Cross probe</li> </ul> </li> <li> Sources <ul> <li>\u041e\u0444\u0438\u0446\u0438\u0430\u043b\u044c\u043d\u0430\u044f \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430\u0446\u0438\u044f</li> <li>\u041c\u043e\u0436\u043d\u043e \u043d\u0430\u0439\u0442\u0438 \u043e\u043f\u0438\u0441\u0430\u043d\u0438\u0435 \u043f\u0430\u043b\u044b\u0442\u043d\u044b\u0445 \u043a\u0443\u0440\u0441\u043e\u0432 - \u0441\u043c\u043e\u0442\u0435\u0440\u0442\u044c \u0438\u0445 \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u0443 \u0438 \u043f\u043e \u0438\u0445\u043d\u0435\u0439 \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u0435 \u0433\u0443\u0433\u043b\u0438\u0442\u044c \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e<ul> <li>\u043a\u0443\u0440\u0441 1</li> </ul> </li> <li>\u043a\u043d\u0438\u0433\u0438</li> </ul> </li> </ul>"},{"location":"MY/my/","title":"My","text":""},{"location":"MY/my/#youtube-chanles","title":"Youtube chanles","text":"Electronics"},{"location":"MY/my/#see-late","title":"See late","text":""},{"location":"MY/rxtx/","title":"Data path","text":"<ul> <li> Base <ul> <li> Tx_data_path_rx_data_path | TX | RX | </li> </ul> </li> </ul>"},{"location":"MY/rxtx/#encoding","title":"Encoding","text":""},{"location":"MY/rxtx/#8b10b-encoding","title":"8b/10b Encoding","text":"Base Why_is_this_needed <ul> <li>Synchronization:<ul> <li>The presence of frequent transitions between 1 and 0 helps the receiver maintain synchronization with the signal, even if the original data contains a long sequence of identical bits.</li> </ul> </li> <li>DC balance:<ul> <li>Eliminates DC offset in the communication line, which simplifies transmission and reception circuits (no need to worry about transmitting \"DC components\").</li> </ul> </li> <li>Error detection:<ul> <li>Some errors can be detected at the encoding level, as incorrect 10-bit sequences can simply be discarded.</li> </ul> </li> </ul> Two_stages <ul> <li>8b/10b encoding is divided into two stages:<ul> <li>8b/6b encoding: Converts 5-bit data into 6-bit code words.</li> <li>3b/4b encoding: Converts the remaining 3 bits into 4-bit code words.</li> </ul> </li> </ul>"},{"location":"MY/rxtx/#running-disparity","title":"Running disparity","text":"Definition <ul> <li> <p>In 8b/10b encoding, disparity is the difference between the number of ones (1) and zeros (0) in a codeword. </p> <ul> <li>Positive and Negative Disparity<ul> <li>Positive disparity (+RD, +2) means that there are more ones (1) than zeros (0) in the codeword.</li> <li>Negative disparity (-RD, -2) means that there are more zeros (0) than ones (1) in the codeword.</li> </ul> </li> <li>Zero disparity (0) means that the number of zeros (0) and ones (1) in the codeword is equal.</li> </ul> </li> <li> Pos_neg_disparity <ul> <li>Examples of 10-bit Codes<ul> <li>Code with Positive Disparity (+2)<ul> <li>1110101100 (7 ones, 3 zeros \u2192 +2)</li> <li>In this word, there are 7 ones and 3 zeros. Therefore, the disparity is +2.</li> </ul> </li> <li>Code with Negative Disparity (-2)<ul> <li>0001010010 (3 ones, 7 zeros \u2192 -2)</li> <li>In this word, there are 3 ones and 7 zeros. Therefore, the disparity is -2.</li> </ul> </li> </ul> </li> </ul> </li> <li> How_work <ul> <li>The transmitter monitors the accumulated disparity (Running Disparity, RD).<ul> <li>If there were more ones before (RD = +1), it selects a code with negative disparity (-2) to bring RD back to -1.</li> <li>If there were more zeros before (RD = -1), it selects a code with positive disparity (+2) to bring RD back to +1.</li> </ul> </li> <li>This helps maintain an even distribution of 1s and 0s in the signal.</li> </ul> </li> </ul>"},{"location":"MY/rxtx/#5b6b-code-abcdei-and-3b4b-code-fghj","title":"5b/6b code (abcdei) and 3b/4b code (fghj)","text":"<ul> <li>5b/6b code (abcdei)</li> <li>3b/4b code (fghj)<ul> <li>Example -&gt; 8b/10b</li> </ul> </li> </ul>"},{"location":"MY/rxtx/#k-codes","title":"K-codes","text":"<p>K-codes (K-symbols) are special control symbols in 8b/10b encoding that do not represent regular data. They are used for synchronization, data flow control, packet delineation, and other service functions.</p> <ul> <li> <p>Why are K-symbols needed?</p> <ul> <li>In digital transmission, there are usually two types of data:<ul> <li>Regular (D-codes, \"Data\") \u2013 These are useful data transmitted in a packet.</li> <li>Control (K-codes, \"Control\") \u2013 These are special symbols that help the transmitter and receiver synchronize<ul> <li>comma image</li> </ul> </li> </ul> </li> </ul> </li> <li> <p>Why K.28.5?</p> <ul> <li>It contains 5 consecutive ones (11111), which do not appear in regular data, making it easy to recognize.</li> <li>This makes it an ideal frame start marker \u2013 the receiver immediately sees where a new data packet begins.</li> </ul> </li> </ul> Example <ul> <li>K.28.5 D.5.6 D.16.2 D.4.3 D.10.5 ...<ul> <li>K.28.5 \u2192 Control character for start of packet</li> <li>D.5.6, D.16.2, D.4.3, D.10.5 \u2192 Regular data</li> </ul> </li> </ul>"},{"location":"MY/rxtx/#64b66b-encoding","title":"64b/66b Encoding","text":"<ul> <li> Base <ul> <li>Used in 10+ Gbit/s Ethernet (10GBASE-R).</li> <li>Lower overhead (only 3% compared to 25% in 8b/10b).</li> <li>Works similarly like 8b/10b but adds a 2-bit header to a 64-bit block.</li> </ul> </li> </ul>"},{"location":"MY/rxtx/#using-materials","title":"Using materials","text":"<ul> <li>wiki</li> <li>8b/10b Encoding</li> <li>8b/10b Encoding</li> </ul>"},{"location":"MY/rxtx/#other","title":"Other","text":"<ul> <li>adiuvoengineering</li> </ul>"},{"location":"MY/rxtx/#other_1","title":"Other","text":""},{"location":"OTHER/Organizational_matters/","title":"Organizational matters","text":""},{"location":"OTHER/Organizational_matters/#questions","title":"Questions","text":""},{"location":"OTHER/Organizational_matters/#meetings","title":"Meetings","text":""},{"location":"OTHER/Organizational_matters/#meetings-monday-1130","title":"Meetings - Monday 11:30","text":""},{"location":"OTHER/Organizational_matters/#03012025","title":"03.01.2025","text":""},{"location":"OTHER/ToDo/","title":"ToDo","text":""},{"location":"OTHER/ToDo/#00-","title":"00 - \u0412\u0430\u0436\u043d\u043e","text":"<ul> <li> <p> on-call       </p> </li> <li> <p> Altium courcse 13-14      </p> </li> <li> <p> IPBUS - GBT      </p> </li> </ul>"},{"location":"OTHER/usefule_links/","title":"Links","text":"\ud83c\udf10 Resource Name \ud83d\udcdd Comments Indico Mattermost SAMS FIT On-Call Schedule alice-fit-fpga FeeRegMap Nikitavoz Nikitavoz FTM Control Software ipbus-firmware"},{"location":"OTHER/usefule_links/#pdf","title":"PDF","text":"\ud83d\udcc4 Document Name \ud83d\udcdd Comments \ud83d\udcc4 Implementing CERN GBT and lpGBTlink arrays in Intel Arria 10 FPGA - \ud83d\udcc4 CRU - \ud83d\udcc4 Sebastian indico (SWT) - \ud83d\udcc4 GBT FPGA User Guide v1_0 - \ud83d\udcc4 GBTx - \ud83d\udcc4 GBT-SCA - \ud83d\udcc4 FIT_Readout_GBT_Finogeev - \ud83d\udcc4 FIT_Serebryakov - \ud83d\udcc4 DISSERTATIONS Alice (Maciej Slupecki) - \ud83d\udcc4 ALICE_TRIGGER_DAQ -"},{"location":"PM/pm/","title":"Pm","text":""},{"location":"PM/pm/#_1","title":"\u0418\u0415\u0420\u0410\u0420\u0425\u0418\u042f","text":"Fit Pincapt_m40_1 Pincapt_m40_2 Pincapt_m40_3 <p>PINCAPT_M40_3 failure PINCAPT_M40_3 failure</p>"},{"location":"PM/pm/#xdc","title":"XDC","text":"Xdc"},{"location":"PM/pm/#_2","title":"\u041d\u0435\u0434\u043e\u0440\u043e\u0431\u043e\u0442\u0430\u043d\u043e\u0435","text":"Pin_capt <pre><code>flowchart LR\n\nD--&gt;|text|A --&gt;|ptime2:0|TDC1_CHA/TDCCHAN\nD--&gt;|text|A --&gt;|ptime2:0|DC1_CHB/TDCCHAN_HD168\nD--&gt;|text|A --&gt;|ptime2:0|TDC1_CHC/TDCCHAN_HD192\nD--&gt;|text|A --&gt;|ptime2:0|TDC1_CHD\n\nD--&gt;|text|A --&gt;|p|PLL1(CLK600_pll)</code></pre>"}]}